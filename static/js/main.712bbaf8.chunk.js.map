{"version":3,"sources":["Select.js","Calculateur.js","index.js"],"names":["Select","className","onChange","value","values","map","val","key","Calculateur","filieres","data","matieres","info","useState","filiere","changeFiliere","x","mat","find","i","obl","id","obligatoire","changeObligatoire","spe","specialite","changeSpecialite","OPT","option1","changeOption1","option2","changeOption2","notes","changeNotes","avg","changeAvg","EPS","changeEPS","onChangeFiliere","useCallback","evt","newFiliere","filter","fil","nom","target","length","Error","calculateMoyenne","moyenne","reduce","acc","coef","bonus","spebonus","toFixed","onChangeObligatoire","Object","entries","onChangeSpecialite","onChangeEPS","checked","onChangeOption","idx","onSubmit","e","preventDefault","Table","size","Array","_","Fragment","colSpan","an","OverlayTrigger","placement","overlay","Tooltip","type","parseInt","Form","Check","label","min","max","onClick","href","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2zlBAYeA,EARA,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC1C,OACI,4BAAQH,UAAS,UAAKA,GAAaC,SAAUA,EAAUC,MAAOA,GACzDC,EAAOC,KAAI,SAACC,GAAD,OAAS,4BAAQC,IAAKD,GAAOA,Q,gDCsStCE,EA7QK,WAChB,IACQC,EAA6BC,EAA7BD,SAAUE,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KAFN,EAGWC,mBAASJ,EAF9B,IADU,mBAGfK,EAHe,KAGNC,EAHM,OAImBF,oBAAS,WAAQ,IAAIG,EAAIP,EAHtD,GAGoEQ,IAAIC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAAM,OAAOJ,EAAIA,EAAEK,GAAK,QAJlG,mBAIfC,EAJe,KAIFC,EAJE,OAKiBV,oBAAS,WAAQ,IAAIG,EAAIP,EAJpD,GAIkEQ,IAAIC,MAAK,SAAAC,GAAC,OAAIA,EAAEK,OAAM,OAAOR,EAAIA,EAAEK,GAAK,QALhG,mBAKfI,EALe,KAKHC,EALG,OAMWb,mBAASJ,EAL9B,GAK4CkB,IAAI,IANtC,mBAMfC,EANe,KAMNC,EANM,OAOWhB,mBAASJ,EAN9B,GAM4CkB,IAAI,IAPtC,mBAOfG,EAPe,KAONC,EAPM,OAQOlB,mBAAS,IARhB,mBAQfmB,EARe,KAQRC,EARQ,OASGpB,mBAAS,GATZ,mBASfqB,EATe,KASVC,EATU,OAUGtB,oBAAS,GAVZ,mBAUfuB,EAVe,KAUVC,EAVU,KAYhBC,EAAkBC,uBAAY,SAACC,GACjC,IAAMC,EAAahC,EAASiC,QAAO,SAACC,GAAD,OAASA,EAAIC,MAAQJ,EAAIK,OAAO1C,SAEnE,GAA0B,IAAtBsC,EAAWK,OACX,MAAM,IAAIC,MAAM,oBAGpBhC,EAAc0B,EAAW,IAGzBlB,GAAkB,WAAQ,IAAIP,EAAIyB,EAAW,GAAGxB,IAAIC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAAM,OAAOJ,EAAIA,EAAEK,GAAK,QACxFK,GAAiB,WAAQ,IAAIV,EAAIyB,EAAW,GAAGxB,IAAIC,MAAK,SAAAC,GAAC,OAAIA,EAAEK,OAAM,OAAOR,EAAIA,EAAEK,GAAK,QACvFQ,EAAcY,EAAW,GAAGd,IAAI,IAChCI,EAAcU,EAAW,GAAGd,IAAI,IAChCM,EAAY,IACZE,EAAU,GACVE,GAAU,KACX,CAAC5B,IAEEuC,EAAmBT,uBAAY,WACjC,IAAMU,GACFnC,EAAQG,IAAIiC,QAAO,SAACC,EAAKlC,GACrB,IAAImC,EAAOnC,EAAImC,KACf,OAAInC,EAAIoC,OACW,SAAXpC,EAAII,IAA8B,UAAZO,GAAmC,SAAZA,IAC7CwB,GAAQ,IAGJpB,EAAMf,EAAII,KAAO,IAAM,GAAK8B,EAAMA,EAAMC,GAAQpB,EAAMf,EAAII,IAAM,MAEpEJ,EAAII,KAAOI,IACX2B,GAAQnC,EAAIqC,UAED,QAAXrC,EAAII,IAAgBe,IACpBgB,GAAQ,GAGLnC,EAAIG,KAAQE,IAAgBL,EAAII,GACnC8B,EACAA,EAAMC,GAAQpB,EAAMf,EAAII,KAAO,MAExC,GAEHP,EAAQG,IAAIiC,QAAO,SAACC,EAAKlC,GACrB,IAAImC,EAAOnC,EAAImC,KAQf,OAPInC,EAAII,KAAOI,IACX2B,GAAQnC,EAAIqC,UAED,QAAXrC,EAAII,IAAgBe,IACpBgB,GAAQ,GAGLnC,EAAIoC,OAAUpC,EAAIG,KAAOE,IAAgBL,EAAII,GAChD8B,EACAA,EAAMC,IACX,IACLG,QAAQ,GAEVpB,EAAUc,KACX,CAACnC,EAAQG,IAAKe,EAAOV,EAAaM,EAASH,EAAYW,IAEpDoB,EAAsBjB,uBAAY,SAACC,GACrCjB,EAAkBkC,OAAOC,QAAQ/C,GAAUO,MAAK,SAAAC,GAAC,OAAIA,EAAE,KAAOqB,EAAIK,OAAO1C,SAAO,IAChF8B,EAAY,MACb,CAACtB,IAEEgD,EAAqBpB,uBAAY,SAACC,GACpCd,EAAiB+B,OAAOC,QAAQ/C,GAAUO,MAAK,SAAAC,GAAC,OAAIA,EAAE,KAAOqB,EAAIK,OAAO1C,SAAO,IAC/E8B,EAAY,MACb,CAACtB,IAEEiD,EAAcrB,uBAAY,SAACC,GAC7BH,EAAUG,EAAIK,OAAOgB,SACrBb,MACD,CAACA,IAEEc,EAAiBvB,uBAAY,SAACwB,GAEhC,OAAO,SAACvB,GACJ,IAAMrC,EAAQqC,EAAIK,OAAO1C,MACb,IAAR4D,GACI5D,IAAU2B,GACVC,EAAcH,GAGlBC,EAAc1B,KAGVA,IAAUyB,GACVC,EAAcC,GAGlBC,EAAc5B,IAElB6C,OAEL,CAACpB,EAASE,EAASkB,IAEhBgB,GAAWzB,uBAAY,SAAC0B,GAC1BA,EAAEC,iBAEFlB,MACD,CAACA,IAEJ,OACI,yBAAK/C,UAAU,aACX,wBAAIA,UAAU,yBAAd,iCACA,yBAAKA,UAAU,iEACX,iCACI,2BAAOA,UAAU,QAAjB,gBACA,kBAAC,EAAD,CACIC,SAAUoC,EACVnC,MAAOW,EAAQ8B,IACfxC,OAAQK,EAASJ,KAAI,SAAAc,GAAC,OAAIA,EAAEyB,UAGnCtB,EACG,6BACI,2BAAOrB,UAAU,QAAjB,8BACA,kBAAC,EAAD,CACIC,SAAUsD,EACVrD,MAAOQ,EAASW,GAChBlB,OAAQU,EAAQG,IAAIyB,QAAO,SAAAvB,GAAC,OAAIA,EAAEC,OAAKf,KAAI,SAAAc,GAAC,OAAIR,EAASQ,EAAEE,UAInE,KAEHI,EACG,6BACI,2BAAOxB,UAAU,QAAjB,uCACA,kBAAC,EAAD,CACIC,SAAUyD,EACVxD,MAAOQ,EAASc,GAChBrB,OAAQU,EAAQG,IAAIyB,QAAO,SAAAvB,GAAC,OAAKA,EAAEK,MAAQL,EAAEC,KAASD,EAAEE,KAAOC,KAAcjB,KAAI,SAAAc,GAAC,OAAIR,EAASQ,EAAEE,UAIzG,MAIR,yBAAKpB,UAAU,iEACX,0BAAM+D,SAAUA,IACZ,kBAACG,EAAA,EAAD,CAAOlE,UAAU,oEAAoEmE,KAAI,MACpF,YAAIC,MAAM,IAAIhE,KAAI,SAACiE,EAAGP,GAAJ,OACf,kBAAC,IAAMQ,SAAP,CAAgBhE,IAAG,iBAAYwD,IAC3B,+BACI,4BACI,wBAAIS,QAAQ,IAAIvE,UAAU,iCACrB,CAAC,yBAAuB,sBAAuB,WAAW8D,KAGnE,4BACI,wBAAI9D,UAAU,sCAAd,cACA,wBAAIA,UAAU,0CACV,0BAAMA,UAAU,qBAAhB,eACA,0BAAMA,UAAU,qBAAhB,SAEJ,wBAAIA,UAAU,mCAAd,UAGR,+BACKa,EAAQG,IAAIyB,QAAO,SAACzB,GAAD,OAASA,EAAIwD,KAAO,CAAC,OAAQ,OAAQ,OAAOV,MAAM1D,KAAI,SAACY,GACvE,IAAImC,EAAOnC,EAAII,KAAOI,EAAaR,EAAImC,KAAOnC,EAAIqC,SAAWrC,EAAImC,KAEjE,MADe,QAAXnC,EAAII,IAAgBe,IAAKgB,GAAQ,GACxB,IAATA,KAAgBnC,EAAIG,KAAQH,EAAIG,KAAOE,IAAgBL,EAAII,IAEvD,wBAAId,IAAKU,EAAII,IACT,wBAAIpB,UAAU,qBACO,YAAhBa,EAAQ8B,KAAqB3B,EAAIO,IAC9B,0BAAMvB,UAAU,wBAAwB,4CAA8CU,EAASM,EAAII,KAEnG,0BAAMpB,UAAU,wBAAwBU,EAASM,EAAII,KAExD0C,EAAM,EACH,0BAAM9D,UAAU,oCACZ,0BAAMA,UAAU,qBACXgB,EAAIL,KACD,kBAAC8D,EAAA,EAAD,CACIC,UAAS,OACTC,QAAS,kBAACC,EAAA,EAAD,CAASxD,GAAE,UAAKJ,EAAII,GAAT,SAAoBT,EAAKK,EAAIL,QAEjD,kBAAC,IAAD,CAAcX,UAAU,UAE1B,KAELgB,EAAI6D,OAIb,0BAAM7E,UAAU,QACZ,kBAAC,EAAD,CACIA,UAAU,UACVC,SAAU4D,EAAeiB,SAAS9D,EAAII,GAAG,GAAI,KAC7ClB,MAAqB,MAAdc,EAAII,GAAG,GAAaO,EAAUE,EACrC1B,OAAQU,EAAQa,MAEnBV,EAAIL,KACD,0BAAMX,UAAU,oCACZ,kBAACyE,EAAA,EAAD,CACIC,UAAU,OACVC,QAAS,kBAACC,EAAA,EAAD,CAASxD,GAAE,UAAKJ,EAAII,GAAT,SAAoBT,EAAKK,EAAIL,QAEjD,kBAAC,IAAD,CAAcX,UAAU,WAG9B,MAIF,QAAXgB,EAAII,GACD,yBAAKpB,UAAU,aAAY,4BACvB,kBAAC+E,EAAA,EAAKC,MAAN,CACIhF,UAAU,cACV6E,KAAK,SACLzD,GAAG,aACH6D,MAAM,uBACNhF,SAAU0D,EACVC,QAASzB,KAGjB,MAGR,wBAAInC,UAAU,yBACE,SAAXgB,EAAII,IAA8B,UAAZO,GAAmC,SAAZA,EAAiCwB,EAAXA,EAAO,GAE/E,wBAAInD,UAAU,kBACV,2BAAO6E,KAAK,SAASK,IAAI,IAAIC,IAAI,KAAKlF,SAAU,SAAC+D,GAC7ChC,EAAY,eAAKD,EAAN,eAAcf,EAAII,GAAK4C,EAAEpB,OAAO1C,SAC3C6C,SAKN,cAMlC,yBAAK/C,UAAU,aACX,4BAAQ6E,KAAK,SAASO,QAASrB,GAAU/D,UAAU,6BAAnD,cAIR,yBAAKA,UAAS,gBAAWiC,EAAM,GAAK,gBAAkB,eAAxC,SACV,0BAAMjC,UAAU,QAAhB,cACA,8BAAOiC,EAAP,SACA,6CAAkB,uBAAGoD,KAAK,2BAA2BC,IAAI,sBAAsB1C,OAAO,UAApE,Y,MC9RtC2C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.712bbaf8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// import Table from 'react-bootstrap/Table'\r\n\r\nconst Select = ({ className, onChange, value, values }) => {\r\n    return (\r\n        <select className={`${className}`} onChange={onChange} value={value}>\r\n            {values.map((val) => <option key={val} >{val}</option>)}\r\n        </select>\r\n    )\r\n};\r\n\r\nexport default Select;","import React, { useState, useCallback } from 'react';\r\n\r\nimport Select from './Select';\r\nimport data from './data.json';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { BsInfoCircle } from 'react-icons/bs';\r\n\r\n/*\r\nA INSTALLER\r\n\r\nnpm install react-bootstrap bootstrap\r\nnpm install react-icons --save\r\n\r\nTODO:\r\n-- Bac TMD et STAV\r\n-- Latin et Grec coef 3 si choisi en option 1\r\n\r\n-- Pour que ce soit plus lisible, on pourrait couper le code en sous-classes (notamment dans le tableau des matières)\r\n-- Ajouter des infos pop-up pour expliquer le calcul des matières bonus\r\n-- Ajouter des infos pour les mentions\r\n-- Ajouter les autres filières\r\n-- Avancer le CSS :\r\n        -- gérer le re-size automatique pour que ce soit moins dégueu\r\n        -- revoir les polices/tailles/couleurs de texte\r\n        -- revoir les fonds/encadrés, etc\r\n-- Vérifier les bugs et le calcul de la moyenne dans toutes les configurations de filières/obligatoire/spé\r\n*/\r\n\r\nconst Calculateur = () => {\r\n    const def = 0;\r\n    const { filieres, matieres, info } = data;\r\n    const [filiere, changeFiliere] = useState(filieres[def]);\r\n    const [obligatoire, changeObligatoire] = useState(() => { let x = filieres[def].mat.find(i => i.obl); return x ? x.id : null; });\r\n    const [specialite, changeSpecialite] = useState(() => { let x = filieres[def].mat.find(i => i.spe); return x ? x.id : null; });\r\n    const [option1, changeOption1] = useState(filieres[def].OPT[0]);\r\n    const [option2, changeOption2] = useState(filieres[def].OPT[1]);\r\n    const [notes, changeNotes] = useState({});\r\n    const [avg, changeAvg] = useState(0);\r\n    const [EPS, changeEPS] = useState(false);\r\n\r\n    const onChangeFiliere = useCallback((evt) => {\r\n        const newFiliere = filieres.filter((fil) => fil.nom === evt.target.value);\r\n\r\n        if (newFiliere.length === 0) {\r\n            throw new Error(\"No filiere found\");\r\n        }\r\n\r\n        changeFiliere(newFiliere[0]);\r\n\r\n        // Pour tout reset quand on change de filliere (pour pas avoir de valeur résiduelle) \r\n        changeObligatoire(() => { let x = newFiliere[0].mat.find(i => i.obl); return x ? x.id : null; });\r\n        changeSpecialite(() => { let x = newFiliere[0].mat.find(i => i.spe); return x ? x.id : null; });\r\n        changeOption1(newFiliere[0].OPT[0]);\r\n        changeOption2(newFiliere[0].OPT[1]);\r\n        changeNotes({});\r\n        changeAvg(0);\r\n        changeEPS(false);\r\n    }, [filieres]);\r\n\r\n    const calculateMoyenne = useCallback(() => {\r\n        const moyenne = (\r\n            filiere.mat.reduce((acc, mat) => {\r\n                let coef = mat.coef;\r\n                if (mat.bonus) { // Pour les matières bonus (TPE & Options)\r\n                    if (mat.id === \"OPT1\" && (option1 === \"Latin\" || option1 === \"Grec\")) { // si Latin ou Grec le coef est de 3.\r\n                        coef += 1;\r\n                    }\r\n\r\n                    return (notes[mat.id] || 0) <= 10 ? acc : acc + coef * (notes[mat.id] - 10); //Seulement les notes au-dessus de 10\r\n                } else {\r\n                    if (mat.id === specialite) {\r\n                        coef += mat.spebonus;\r\n                    }\r\n                    if (mat.id === \"EPS\" && EPS) {\r\n                        coef += 2;\r\n                    }\r\n\r\n                    return mat.obl && (obligatoire !== mat.id) ? //ne compter que la matière obligatoire choisie\r\n                        acc :\r\n                        acc + coef * (notes[mat.id] || 0); // appliquer les coef bonus\r\n                }\r\n            }, 0)\r\n            /\r\n            filiere.mat.reduce((acc, mat) => {\r\n                let coef = mat.coef;\r\n                if (mat.id === specialite) { // coef + coef de spé si nécessaire\r\n                    coef += mat.spebonus;\r\n                }\r\n                if (mat.id === \"EPS\" && EPS) {\r\n                    coef += 2;\r\n                }\r\n\r\n                return mat.bonus || (mat.obl && obligatoire !== mat.id) ? // ni les obligatoires non-choisies ni les bonus\r\n                    acc :\r\n                    acc + coef; // coef + coef de spé si nécessaire\r\n            }, 0)\r\n        ).toFixed(2);\r\n\r\n        changeAvg(moyenne);\r\n    }, [filiere.mat, notes, obligatoire, option1, specialite, EPS]);\r\n\r\n    const onChangeObligatoire = useCallback((evt) => {\r\n        changeObligatoire(Object.entries(matieres).find(i => i[1] === evt.target.value)[0]); //Il y a surement plus simple ;D\r\n        changeNotes({});\r\n    }, [matieres]);\r\n\r\n    const onChangeSpecialite = useCallback((evt) => {\r\n        changeSpecialite(Object.entries(matieres).find(i => i[1] === evt.target.value)[0]);\r\n        changeNotes({});\r\n    }, [matieres]);\r\n\r\n    const onChangeEPS = useCallback((evt) => {\r\n        changeEPS(evt.target.checked);\r\n        calculateMoyenne();\r\n    }, [calculateMoyenne]);\r\n\r\n    const onChangeOption = useCallback((idx) => {\r\n        // afin d'eviter que la personne selectionne deux fois la meme options.\r\n        return (evt) => {\r\n            const value = evt.target.value;\r\n            if (idx === 1) {\r\n                if (value === option2) {\r\n                    changeOption2(option1);\r\n                }\r\n\r\n                changeOption1(value);\r\n            }\r\n            else {\r\n                if (value === option1) {\r\n                    changeOption1(option2);\r\n                }\r\n\r\n                changeOption2(value);\r\n            }\r\n            calculateMoyenne();\r\n        }\r\n    }, [option1, option2, calculateMoyenne]);\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n\r\n        calculateMoyenne();\r\n    }, [calculateMoyenne]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-center pt-3 pb-3\">Calculateur de moyenne du Bac</h1>\r\n            <div className=\"border border-primary rounded shadow-lg p-md-3 p-2 m-1 m-md-3\">\r\n                <div> {/* Je sépare le label du select custom pour pouvoir gérer la mise en page*/}\r\n                    <label className=\"pr-3\">Filière :</label>\r\n                    <Select\r\n                        onChange={onChangeFiliere}\r\n                        value={filiere.nom}\r\n                        values={filieres.map(i => i.nom)}\r\n                    />\r\n                </div>\r\n                {obligatoire ?\r\n                    <div>\r\n                        <label className=\"pr-3\">Enseignement obligatoire :</label>\r\n                        <Select\r\n                            onChange={onChangeObligatoire}\r\n                            value={matieres[obligatoire]}\r\n                            values={filiere.mat.filter(i => i.obl).map(i => matieres[i.id])}\r\n                        />\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n                {specialite ?\r\n                    <div>\r\n                        <label className=\"pr-3\">Enseignement de spécialité : </label>\r\n                        <Select\r\n                            onChange={onChangeSpecialite}\r\n                            value={matieres[specialite]}\r\n                            values={filiere.mat.filter(i => (i.spe && !i.obl) || (i.id === obligatoire)).map(i => matieres[i.id])}\r\n                        />\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n\r\n            <div className=\"border border-primary rounded shadow-lg p-md-3 p-1 m-1 m-md-3\">\r\n                <form onSubmit={onSubmit}>\r\n                    <Table className=\"table-bordered table-striped table-responsive table-responsive-xs\" size={`sm`}>\r\n                        {[...Array(3)].map((_, idx) =>\r\n                            <React.Fragment key={`tableau${idx}`}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th colSpan=\"3\" className=\"h4 font-weight-bold pb-2 pt-2\">\r\n                                            {[\"Epreuves anticipées\", \"Epreuves Terminales\", \"Options\"][idx]}\r\n                                        </th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"matiere h5 font-weight-normal-plus\">Matière</th>\r\n                                        <th className=\"coefficient h5 font-weight-normal-plus\">\r\n                                            <span className=\"d-none d-sm-block\">Coefficient</span>\r\n                                            <span className=\"d-block d-sm-none\">Coef</span>\r\n                                        </th>\r\n                                        <th className=\"note h5 font-weight-normal-plus\">Note</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {filiere.mat.filter((mat) => mat.an === [\"PREM\", \"TERM\", \"OPT\"][idx]).map((mat) => {\r\n                                        let coef = mat.id === specialite ? mat.coef + mat.spebonus : mat.coef;\r\n                                        if (mat.id === \"EPS\" && EPS) coef += 2;\r\n                                        if (coef !== 0 && (!mat.obl || (mat.obl && obligatoire === mat.id))) {\r\n                                            return (\r\n                                                <tr key={mat.id}>\r\n                                                    <td className=\"matiere pb-0 pt-1\">\r\n                                                        {filiere.nom === \"Bac STL\" && mat.spe ? //Petit cas relou\r\n                                                            <span className=\"float-left pl-1 pr-1\">{\"Chimie, biochimie, sciences du vivant et \" + matieres[mat.id]}</span>\r\n                                                            :\r\n                                                            <span className=\"float-left pl-1 pr-1\">{matieres[mat.id]}</span>\r\n                                                        }\r\n                                                        {idx < 2 ?\r\n                                                            <span className=\"float-right text-muted pl-1 pr-2\">\r\n                                                                <span className=\"d-none d-sm-block\">\r\n                                                                    {mat.info ?\r\n                                                                        <OverlayTrigger\r\n                                                                            placement={`left`}\r\n                                                                            overlay={<Tooltip id={`${mat.id}info`}>{info[mat.info]}</Tooltip>}\r\n                                                                        >\r\n                                                                            <BsInfoCircle className=\"pr-1\" />\r\n                                                                        </OverlayTrigger>\r\n                                                                        : null\r\n                                                                    }\r\n                                                                    {mat.type}\r\n                                                                </span>\r\n                                                            </span>\r\n                                                            :\r\n                                                            <span className=\"pl-1\">\r\n                                                                <Select\r\n                                                                    className=\"options\"\r\n                                                                    onChange={onChangeOption(parseInt(mat.id[3], 10))}\r\n                                                                    value={mat.id[3] === '1' ? option1 : option2}\r\n                                                                    values={filiere.OPT}\r\n                                                                />\r\n                                                                {mat.info ?\r\n                                                                    <span className=\"float-right text-muted pl-1 pr-2\">\r\n                                                                        <OverlayTrigger\r\n                                                                            placement=\"left\"\r\n                                                                            overlay={<Tooltip id={`${mat.id}info`}>{info[mat.info]}</Tooltip>}\r\n                                                                        >\r\n                                                                            <BsInfoCircle className=\"pr-1\" />\r\n                                                                        </OverlayTrigger>\r\n                                                                    </span>\r\n                                                                    : null\r\n                                                                }\r\n                                                            </span>\r\n                                                        }\r\n                                                        {mat.id === 'EPS' ?\r\n                                                            <div className=\"pt-2 pl-2\"><p />\r\n                                                                <Form.Check\r\n                                                                    className=\"eps-section\"\r\n                                                                    type=\"switch\"\r\n                                                                    id=\"EPS-switch\"\r\n                                                                    label=\"EPS de complément\"\r\n                                                                    onChange={onChangeEPS}\r\n                                                                    checked={EPS}\r\n                                                                /></div>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td className=\"coefficient pb-0 pt-1\">\r\n                                                        {mat.id === \"OPT1\" && (option1 === \"Latin\" || option1 === \"Grec\") ? coef + 1 : coef}\r\n                                                    </td>\r\n                                                    <td className=\"note pb-0 pt-1\">\r\n                                                        <input type=\"number\" min=\"0\" max=\"20\" onChange={(e) => {\r\n                                                            changeNotes({ ...notes, [mat.id]: e.target.value });\r\n                                                            calculateMoyenne();\r\n                                                        }} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        } else return null;\r\n                                    })}\r\n                                </tbody>\r\n                            </React.Fragment >\r\n                        )}\r\n                    </Table>\r\n                    <div className=\"pl-3 pb-3\">\r\n                        <button type=\"submit\" onClick={onSubmit} className=\"btn-primary btn-sm shadow\">Calculer</button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className={`alert ${avg > 10 ? \"alert-success\" : \"alert-danger\"} p-2`}>\r\n                    <span className=\"pr-3\"> Moyenne :</span>\r\n                    <span>{avg} / 20</span>\r\n                    <div>Plus d'infos <a href=\"https://syndicat-unl.fr/\" rel=\"noopener noreferrer\" target=\"_blank\">ici</a></div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Calculateur;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Calculateur from './Calculateur';\r\n// import App from './App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Calculateur/>\r\n  </React.StrictMode>,\r\n  document.getElementById('calc')\r\n);\r\n\r\n"],"sourceRoot":""}